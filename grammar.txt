# statements
#######################################################

PROGRAM: STATEMENT_LIST

STATEMENT_LIST: STATEMENT                |
                STATEMENT_LIST STATEMENT

STATEMENT: EXPRESSION |
           ITERATION  |
           SELECTION  |
           BLOCK

BLOCK: "{" STATEMENT_LIST? "}

ITERATION: "while" EXPRESSION STATEMENT               |
           "for" EXPRESSION in EXPRESSION STATEMENT

SELECTION: "if" EXPRESSION STATEMENT                  |
           "if" EXPRESSION STATEMENT "else" STATEMENT

# expressions
#########################################################

EXPRESSION: ASSIGNMENT

ASSIGNMENT: CONDITIONAL               |
            IDENTIFIER "=" ASSIGNMENT

CONDITIONAL: LOGICAL_OR

LOGICAL_OR: LOGICAL_AND                    |
            LOGICAL_OR "or" LOGICAL_OR

LOGICAL_AND: EQUALITY                      |
             LOGICAL_AND "and" LOGICAL_AND

EQUALITY: RELATIONAL             |
          EQUALITY "==" EQUALITY |
          EQUALITY "!=" EQUALITY

RELATIONAL: ADDITIVE                 |
            RELATIONAL "<"  ADDITIVE |
            RELATIONAL ">"  ADDITIVE |
            RELATIONAL "<=" ADDITIVE |
            RELATIONAL ">=" ADDITIVE

ADDITIVE: MULTIPLICATIVE              |
          ADDITIVE "+" MULTIPLICATIVE |
          ADDITIVE "-" MULTIPLICATIVE

MULTIPLICATIVE: UNARY                    |
                MULTIPLICATIVE "/" UNARY |
                MULTIPLICATIVE "*" UNARY |
                MULTIPLICATIVE "%" UNARY

UNARY: POSTFIX    |
       "++" UNARY |
       "--" UNARY |
        "-" UNARY |
        "!" UNARY

POSTFIX: PRIMARY_EXPRESSION             |
         POSTFIX "[" EXPRESSION "]"     |
         POSTFIX "(" ARGUMENT_LIST? ")" |
         POSTFIX "." IDENTIFIER

PRIMARY_EXPRESSION: IDENTIFIER     |
                    STRING         |
                    INT            |
                    FLOAT          |
                    ( EXPRESSION )

ARGUMENT_LIST: ASSIGNMENT                    |
               ARGUMENT_LIST "," ASSIGNMENT

